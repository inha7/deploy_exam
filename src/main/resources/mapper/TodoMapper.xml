<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.TodoMapper">


<!--   순서 : mapper 인터페이스에서 작업 후 여기서 작업 - mybatis -->
    <select id="getTime" resultType="string"> -- id는 메서드명, resultType은 타입( String getId() )
        select now()
    </select>

    <insert id="insert">
        insert into tbl_todo (title,dueDate,writer)
        values (#{title},#{dueDate},#{writer});
    </insert>

    <select id="selectAll" resultType="domain.TodoVO">
        select *
        from tbl_todo order by tno desc;
    </select>

    <select id="selectOne" resultType="domain.TodoVO">
        select *
        from tbl_todo
        where tno = #{tno};
    </select>

<!--    void delete(Long tno);-->
    <delete id="delete">
        delete
        from tbl_todo
        where tno = #{tno};
    </delete>

<!--    void update(TodoVO todoVO); -->
    <update id="update">
        update tbl_todo
        set title=#{title},
            dueDate=#{dueDate},
            finished=#{finished}
        where tno = #{tno};
    </update>

    <sql id="search">
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator="OR">
                    <if test="type == 't'.toString()">
                        title like concat('%',#{keyword},'%')
                    </if>
                    <if test="type=='w'.toString()">
                        writer like concat('%',#{keyword},'%')
                    </if>
                </foreach>
            </if>

            <if test="finished">
                <trim prefix="and">
                    finished=1
                </trim>
            </if>
            <if test="from != null and to != null">
                <trim prefix="and">
                    duedate between #{from} and #{to}
                </trim>
            </if>
        </where>
    </sql>

    <select id="selectList" resultType="domain.TodoVO">
        select * from tbl_todo
        <include refid="search"/>
        order by tno desc limit #{skip}, #{size};
    </select>
<!--    for문 시작할때(open) ( 추가, 끝날때 ) 추가
        검색 쿼리의 where 문이 없음 - types가 없는 경우 쿼리문에 where을 생성하지 않기 위해
        <where>은 태그 안쪽에서 문자열이 생성되어야지만 where 키워드 추가
-->

<!--    ${skip}은 getSkip()을 호출-->

<!--    우선 전체 개수를 반환하도록 구성 - 나중에 검색값 할때 씀-->
    <select id="getCount" resultType="int">
        select count(tno) from tbl_todo
        <include refid="search"/>
    </select>




</mapper>

